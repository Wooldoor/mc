/* 
  Table of instructions. Each instruction
  is defined by the following macro:

	Insn(enumval, gasfmt, p9fmt, uses, defs)

  The format string 'fmt' has the following expansions:

	%r		- int reg
	%f		- xmm reg
	%m		- mem
	%i		- imm
	%v		- reg/mem
	%u		- reg/imm
	%x		- reg/freg/mem/imm
	%[1-9]*t	- Mode of an operand. The optional number
			  preceeding it is the operand desired for
			  the mode.

  The uppercase version of these formats denote the plan 9
  syntax of the above.

  Because 0 indictates the sentiel value, the indexing on use
  and def statments is 1-based.
  
  Right now, I'm going to make all instructions work like in x86 in the sense
  that where ARM supports 3 arguments (dst, src1, src2), x86 has 2 (src, dst).
  ARM instructions written as (src1, src1, src2).
'*/

#define None .l={0},.r={0}
Insn(Inone,
    "BAD_INSN",
    "BAD_INSN",
    Use(None),
    Def(None))
/* Note, the mov instruction is specified in an overly general manner. */

/* not actually insns */
Insn(Ilbl,
    "%v:\n",
    "%V:\n",
    Use(None),
    Def(None))

Insn(Ifile,
    "\t.file %v \"%v\"\n",
    "\t//file: %V \"%V\"\n",
    Use(None),
    Def(None))

Insn(Iloc,
    "\t.loc %v\n",
    "",
    Use(None),
    Def(None))

Insn(Icomment,
    "\t#%v\n",
    "\t//%V:\n",
    Use(None),
    Def(None))

/* Moving memory around */
Insn(Ildr,
    "\tldr %r,%x\n",
    "",
    Use(.l={1}),
    Def(.l={2}))

Insn(Istr,
    "\tstr %r,%x\n",
    "",
    Use(.l={1}),
    Def(.l={2}))

Insn(Ipush,
    "\tpush %r\n",
    "",
    Use(.l={1}),
    Def(None))

Insn(Ipop,
    "\tpop %r\n",
    "",
    Use(.l={1}),
    Def(None))

Insn(Imovt,
    "\tmovt %r, %i\n",
    "",
    Use(.l={1}),
    Def(.l={1}))

Insn(Icpy,
    "\tcpy %r, %r\n",
    "",
    Use(.l={1, 2}),
    Def(.l={1}))

Insn(Imov32,
    "\tmov32 %r, %x\n",
    "",
    Use(.l={1}),
    Def(.l={1}))

/* Arithmetic */
Insn(Iadd,
    "\tadd %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Isub,
    "\tsub %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Irsb,
    "\trsb %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Iadc,
    "\tadc %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Isbc,
    "\tsbc %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Irsc,
    "\trsc %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Ineg,
    "\tneg %r, %r\n",
    "",
    Use(.l={1, 2}),
    Def(.l={1}))

/* Bitwise */

Insn(Iclz,
    "\tclz %r, %r\n",
    "",
    Use(.l={1, 2}),
    Def(.l={1}))

Insn(Iand,
    "\tand %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Ior,
    "\torr %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Ieor,
    "\teor %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Ibic,
    "\tand %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Iasr,
    "\tasr, %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Ilsl,
    "\tlsl, %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Ilsr,
    "\tlsr, %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Iror,
    "\tror, %r, %r, %u\n",
    "",
    Use(.l={1, 2, 3}),
    Def(.l={1}))

Insn(Irrx,
    "\tasr, %r, %r\n",
    "",
    Use(.l={1, 2}),
    Def(.l={1}))


/* Comparison and branching */
/* TODO: Implement condition codes so can have just 1 B and BL instruction */
Insn(Icmp,
    "\tcmp %r, %u\n",
    "",
    Use(.l={1, 2}),
    Def(None))

Insn(Icmn,
    "\tcmn %r, %u\n",
    "",
    Use(.l={1, 2}),
    Def(None))

Insn(Itst,
    "\ttst %r, %u\n",
    "",
    Use(.l={1, 2}),
    Def(None))

Insn(Iteq,
    "\tteq %r, %u\n",
    "",
    Use(.l={1, 2}),
    Def(None))
 
 Insn(Ib,
    "\tb %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibeq,
    "\tbeq %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibne,
    "\tbne %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibgt,
    "\tbgt %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibge,
    "\tbge %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Iblt,
    "\tb %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ible,
    "\tble %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibhi,
    "\tbhi %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Iblo,
    "\tblo %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibhs,
    "\tbhs %v\n",
    "",
    Use(.l={1}),
    Def(None))

 Insn(Ibls,
    "\tbls %v\n",
    "",
    Use(.l={1}),
    Def(None))

Insn(Ibl,
    "\tbl %v\n",
    "",
    Use(.l={1}),
    Def(.r={Rr14}))

/* CPSR Manipulation */
Insn(Imrs,
	"\tmrs %r, APSR\n",
	"",
	Use(.l={1}),
	Def(.l={1}))
Insn(Imsr,
	"\tmsr %u, APSR\n",
	"",
	Use(.l={1}),
	Def(.l={1}))
